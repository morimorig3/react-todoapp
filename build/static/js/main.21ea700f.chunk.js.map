{"version":3,"sources":["TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["APP_NAME","TodoApp","useState","JSON","parse","localStorage","getItem","todo","setTodo","task","setTask","disabled","setdisabled","useEffect","writeLocalStrage","setItem","stringify","deleteTask","index","newTask","splice","Container","className","Row","Col","Form","onSubmit","e","preventDefault","isCompleted","xs","sm","Control","required","type","placeholder","autoComplete","value","onChange","target","Button","variant","block","map","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAIMA,EAAW,YAmFFC,EAjFC,WACZ,IADkB,EAIMC,oBAHP,kBACbC,KAAKC,MAAMC,aAAaC,QAAQN,IAAW,SAF7B,mBAIXO,EAJW,KAILC,EAJK,OAKMN,mBAAS,IALf,mBAKXO,EALW,KAKLC,EALK,OAMcR,oBAAS,GANvB,mBAMXS,EANW,KAMDC,EANC,KAQlBC,qBAAU,WACNC,OAEJ,IAAMA,EAAmB,WACrBT,aAAaU,QAAQf,EAAUG,KAAKa,UAAUT,KAkB5CU,EAAa,SAACC,GAChB,IAAMC,EAAO,YAAOZ,GACpBY,EAAQC,OAAOF,EAAO,GACtBV,EAAQW,IAEZ,OACI,eAACE,EAAA,EAAD,CAAWC,UAAU,eAArB,UACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UAAK,oBAAIF,UAAU,mBAAd,2BAET,cAACC,EAAA,EAAD,CAAKD,UAAU,OAAf,SACI,cAACE,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAMC,SAnBF,SAACC,GACbA,EAAEC,iBACU,KAATnB,IACHD,GAAQ,SAAAD,GAAI,4BAAQA,GAAR,CAAc,CAACE,KAAMA,EAAMoB,aAAY,QACnDnB,EAAQ,IACRE,GAAY,KAcJ,SACI,eAACa,EAAA,EAAKF,IAAN,CAAUD,UAAU,qBAApB,UACI,cAACE,EAAA,EAAD,CAAKM,GAAI,GAAIC,GAAI,GAAjB,SACI,cAACN,EAAA,EAAKO,QAAN,CACIC,UAAQ,EACRC,KAAK,OACLC,YAAY,GACZC,aAAa,MACbC,MAAO5B,EACP6B,SApCV,SAACX,GACZA,EAAEY,OAAOF,MACRzB,GAAY,GAEZA,GAAY,GAEhBF,EAAQiB,EAAEY,OAAOF,YAiCD,cAACb,EAAA,EAAD,CAAKM,GAAI,GAAIC,GAAI,EAAjB,SACI,cAACS,EAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAAU9B,SAAUA,EAAU+B,OAAK,EAAjE,qCAQhB,cAACnB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,oBAAIF,UAAU,MAAd,SACKf,EAAKoC,KAAI,SAACpC,EAAMW,GAAP,OACN,qBAAII,UAAU,oDAAd,UACI,sBAAMA,UAAU,oBAAhB,SAAqCf,EAAKE,OAC1C,qBAAKa,UAAU,yDAAf,SACI,cAACkB,EAAA,EAAD,CAAQI,QAAS,kBAAM3B,EAAWC,IAAQgB,KAAK,SAASO,QAAQ,SAAhE,sBAH+DvB,gBChEpF2B,EANH,WACR,OACI,cAAC,EAAD,KCOOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.21ea700f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst APP_NAME = 'TODO_APP!'\n\nconst TodoApp = () => {\n    const initTodo = () => (\n        JSON.parse(localStorage.getItem(APP_NAME)||'[]')\n    )\n    const [todo, setTodo] = useState(initTodo)\n    const [task, setTask] = useState('')\n    const [disabled, setdisabled] = useState(true)\n\n    useEffect(() => {\n        writeLocalStrage()\n    })\n    const writeLocalStrage = () => {\n        localStorage.setItem(APP_NAME, JSON.stringify(todo))\n    }\n\n    const enterTask = (e) => {\n        if(e.target.value){\n            setdisabled(false)\n        } else {\n            setdisabled(true)\n        }\n        setTask(e.target.value)\n    }\n    const addTask = (e) => {\n        e.preventDefault()\n        if(task === '') return\n        setTodo(todo => [...todo, {task: task, isCompleted:false}])\n        setTask('')\n        setdisabled(true)\n    }\n    const deleteTask = (index) => {\n        const newTask = [...todo]\n        newTask.splice(index, 1)\n        setTodo(newTask)\n    }\n    return (\n        <Container className=\"py-sm-4 py-2\">\n            <Row>\n                <Col><h1 className=\"font-weight-bold\">TO DO APP</h1></Col>\n            </Row>\n            <Row className=\"mb-3\">\n                <Col>\n                <Form onSubmit={addTask}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col xs={12} sm={10}>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"\"\n                                autoComplete=\"off\"\n                                value={task}\n                                onChange={enterTask}\n                            />\n                        </Col>\n                        <Col xs={12} sm={2}>\n                            <Button type=\"submit\" variant=\"primary\" disabled={disabled} block>\n                                追加\n                            </Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <ul className=\"p-0\">\n                        {todo.map((todo, index) => (                            \n                            <li className=\"d-flex align-items-center border p-2 mb-2 rounded\" key={index}>\n                                <span className=\"col-10 text-break\">{todo.task}</span>\n                                <div className=\"col-2 d-flex align-items-center justify-content-center\">\n                                    <Button onClick={() => deleteTask(index)} type=\"button\" variant=\"danger\">×</Button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default TodoApp","import './App.css';\nimport TodoApp from './TodoApp';\n\nconst App = () => {\n    return (\n        <TodoApp />\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}