{"version":3,"sources":["TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["APP_NAME","TodoApp","styleS","color","useState","JSON","parse","localStorage","getItem","todo","setTodo","task","setTask","disabled","setdisabled","useEffect","writeLocalStrage","setItem","stringify","deleteTask","index","newTask","splice","completedTask","isCompleted","Container","className","Row","Col","style","fontSize","href","target","rel","Form","onSubmit","e","preventDefault","xs","sm","Control","required","type","placeholder","autoComplete","value","onChange","Button","variant","block","map","id","checked","htmlFor","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d0fccc2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { FaGithub } from 'react-icons/fa'\n\nconst APP_NAME = 'TODO_APP!'\n\nconst TodoApp = () => {\n    const styleS = {\n        color:'#cccccc'\n    }\n    const styleGithub = {\n        color:'#000000',\n        fontSize:'30px'\n    }\n    const initTodo = () => (\n        JSON.parse(localStorage.getItem(APP_NAME)||'[]')\n    )\n    const [todo, setTodo] = useState(initTodo)\n    const [task, setTask] = useState('')\n    const [disabled, setdisabled] = useState(true)\n\n    useEffect(() => {\n        writeLocalStrage()\n    })\n    const writeLocalStrage = () => {\n        localStorage.setItem(APP_NAME, JSON.stringify(todo))\n    }\n\n    const enterTask = (e) => {\n        if(e.target.value){\n            setdisabled(false)\n        } else {\n            setdisabled(true)\n        }\n        setTask(e.target.value)\n    }\n    const addTask = (e) => {\n        e.preventDefault()\n        if(task === '') return\n        setTodo(todo => [...todo, {task: task, isCompleted:false}])\n        setTask('')\n        setdisabled(true)\n    }\n    const deleteTask = (index) => {\n        const newTask = [...todo]\n        newTask.splice(index, 1)\n        setTodo(newTask)\n    }\n    const completedTask = (index) => {\n        const newTask = [...todo]\n        newTask[index].isCompleted = !newTask[index].isCompleted\n        setTodo(newTask)\n    }\n    return (\n        <Container className=\"py-sm-4 py-2\">\n            <Row>\n                <Col className='d-flex justify-content-between'><h1 className=\"font-weight-bold\">TO DO APP</h1><a style={styleGithub} href='https://github.com/tashirimo/react-todoapp' target='_blank' rel=\"noreferrer\"><FaGithub /></a></Col>\n            </Row>\n            <Row className=\"mb-3\">\n                <Col>\n                <Form onSubmit={addTask}>\n                    <Form.Row className=\"align-items-center\">\n                        <Col xs={12} sm={10} className='mb-2'>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"\"\n                                autoComplete=\"off\"\n                                value={task}\n                                onChange={enterTask}\n                            />\n                        </Col>\n                        <Col xs={12} sm={2} className='mb-2'>\n                            <Button type=\"submit\" variant=\"primary\" disabled={disabled} block>\n                                追加\n                            </Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <ul className=\"p-0\">\n                        {todo.map((todo, index) => {\n                            return (\n                                <li className=\"d-flex align-items-center border p-2 mb-2 rounded\" key={index}>\n                                <span className=\"col-10 text-break form-check\">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"checkbox\"\n                                        value=\"\"\n                                        id={`check-${index}`}\n                                        checked={todo.isCompleted}\n                                        onChange={() => completedTask(index)}\n                                    />\n                                    <label className=\"form-check-label\" htmlFor={`check-${index}`}>\n                                        {todo.isCompleted ? <s style={styleS}>{todo.task}</s> : todo.task}\n                                    </label>\n                                </span>\n                                <div className=\"col-2 d-flex align-items-center justify-content-center\">\n                                    <Button onClick={() => deleteTask(index)} type=\"button\" variant=\"danger\">×</Button>\n                                </div>\n                            </li>\n                            )\n                        })}\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default TodoApp","import './App.css';\nimport TodoApp from './TodoApp';\n\nconst App = () => {\n    return (\n        <TodoApp />\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}