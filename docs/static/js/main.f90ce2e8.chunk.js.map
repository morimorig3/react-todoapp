{"version":3,"sources":["totoapp/Todolist.js","totoapp/TodoApp.js","App.js","reportWebVitals.js","index.js"],"names":["Todolist","props","styleS","color","className","todo","map","index","type","value","id","checked","isCompleted","onChange","newTask","setTodo","completedTask","htmlFor","style","task","Button","onClick","splice","deleteTask","variant","icon","faTimes","APP_NAME","TodoApp","useState","JSON","parse","localStorage","getItem","setTask","disabled","setdisabled","useEffect","writeLocalStrage","setItem","stringify","Container","Row","Col","href","target","rel","Form","onSubmit","e","preventDefault","xs","sm","Control","required","placeholder","autoComplete","block","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f90ce2e8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Todolist = (props) => {\n  const styleS = {\n    color: \"#cccccc\",\n  };\n  const deleteTask = (index) => {\n    const newTask = [...props.todo];\n    newTask.splice(index, 1);\n    props.setTodo(newTask);\n  };\n  const completedTask = (index) => {\n    const newTask = [...props.todo];\n    newTask[index].isCompleted = !newTask[index].isCompleted;\n    props.setTodo(newTask);\n  };\n  return (\n    <ul className=\"p-0\">\n      {props.todo.map((todo, index) => {\n        return (\n          <li\n            className=\"d-flex align-items-center border p-2 mb-2 rounded\"\n            key={index}\n          >\n            <span className=\"col-10 text-break form-check\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                value=\"\"\n                id={`check-${index}`}\n                checked={todo.isCompleted}\n                onChange={() => completedTask(index)}\n              />\n              <label className=\"form-check-label\" htmlFor={`check-${index}`}>\n                {todo.isCompleted ? (\n                  <s style={styleS}>{todo.task}</s>\n                ) : (\n                  todo.task\n                )}\n              </label>\n            </span>\n            <div className=\"col-2 d-flex align-items-center justify-content-center\">\n              <Button\n                onClick={() => deleteTask(index)}\n                type=\"button\"\n                variant=\"danger\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </Button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Todolist;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FaGithub } from \"react-icons/fa\";\nimport Todolist from \"./Todolist\";\n\nconst APP_NAME = \"TODO_APP!\";\n\nconst TodoApp = () => {\n  const styleGithub = {\n    color: \"#000000\",\n    fontSize: \"30px\",\n  };\n  const initTodo = () => JSON.parse(localStorage.getItem(APP_NAME) || \"[]\");\n  const [todo, setTodo] = useState(initTodo);\n  const [task, setTask] = useState(\"\");\n  const [disabled, setdisabled] = useState(true);\n\n  useEffect(() => {\n    writeLocalStrage();\n  });\n  const writeLocalStrage = () => {\n    localStorage.setItem(APP_NAME, JSON.stringify(todo));\n  };\n\n  const enterTask = (e) => {\n    if (e.target.value) {\n      setdisabled(false);\n    } else {\n      setdisabled(true);\n    }\n    setTask(e.target.value);\n  };\n  const addTask = (e) => {\n    e.preventDefault();\n    if (task === \"\") return;\n    setTodo((todo) => [...todo, { task: task, isCompleted: false }]);\n    setTask(\"\");\n    setdisabled(true);\n  };\n  return (\n    <Container className=\"py-sm-4 py-2\">\n      <Row>\n        <Col className=\"d-flex justify-content-between\">\n          <h1 className=\"font-weight-bold\">TO DO APP</h1>\n          <a\n            className=\"text-dark h2\"\n            href=\"https://github.com/morimorig3/react-todoapp\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FaGithub />\n          </a>\n        </Col>\n      </Row>\n      <Row className=\"mb-3\">\n        <Col>\n          <Form onSubmit={addTask}>\n            <Form.Row className=\"align-items-center\">\n              <Col xs={12} sm={10} className=\"mb-2\">\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"\"\n                  autoComplete=\"off\"\n                  value={task}\n                  onChange={enterTask}\n                />\n              </Col>\n              <Col xs={12} sm={2} className=\"mb-2\">\n                <Button\n                  type=\"submit\"\n                  variant=\"primary\"\n                  disabled={disabled}\n                  block\n                >\n                  追加\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Todolist todo={todo} setTodo={setTodo} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TodoApp;\n","import \"./App.css\";\nimport TodoApp from \"./totoapp/TodoApp\";\n\nconst App = () => {\n  return <TodoApp />;\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}